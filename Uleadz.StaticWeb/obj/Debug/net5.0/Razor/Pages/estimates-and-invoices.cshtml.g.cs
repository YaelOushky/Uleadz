#pragma checksum "/Users/yaeloushky/Desktop/dev/Uleadz/Uleadz.StaticWeb/Uleadz.StaticWeb/Pages/estimates-and-invoices.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bfdbeaf2f9786241a30aac95dea3a34495673e3c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Uleadz.StaticWeb.Pages.Pages_estimates_and_invoices), @"mvc.1.0.view", @"/Pages/estimates-and-invoices.cshtml")]
namespace Uleadz.StaticWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/yaeloushky/Desktop/dev/Uleadz/Uleadz.StaticWeb/Uleadz.StaticWeb/Pages/_ViewImports.cshtml"
using Uleadz.StaticWeb;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bfdbeaf2f9786241a30aac95dea3a34495673e3c", @"/Pages/estimates-and-invoices.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5a7a4c19142bf78df3df679bc28ef333ea4cf962", @"/Pages/_ViewImports.cshtml")]
    public class Pages_estimates_and_invoices : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("margin: 0; background: #ffffff"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\n<html>\n  ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bfdbeaf2f9786241a30aac95dea3a34495673e3c3488", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"" />
    <meta name=""viewport"" content=""width=1366, maximum-scale=1.0"" />
    <link rel=""shortcut icon"" type=""image/png"" href=""https://animaproject.s3.amazonaws.com/home/favicon.png"" />
    <meta name=""og:type"" content=""website"" />
    <meta name=""twitter:card"" content=""photo"" />
    <link rel=""stylesheet"" type=""text/css"" href=""css/estimates-and-invoices.css"" />
    <link rel=""stylesheet"" type=""text/css"" href=""css/styleguide.css"" />
    <link rel=""stylesheet"" type=""text/css"" href=""css/globals.css"" />
  ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n  ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bfdbeaf2f9786241a30aac95dea3a34495673e3c5008", async() => {
                WriteLiteral(@"
    <input type=""hidden"" id=""anPageName"" name=""page"" value=""estimates-and-invoices"" />
    <div class=""container-center-horizontal"">
      <div class=""estimates-and-invoices screen"">
        <div class=""overlap-group13"">
          <div class=""overlap-group11"">
            <img class=""x1207_vw50a-x-rs-zw-qt-mg-1"" src=""img/1207-vw50axrszwqtmg-1-1@1x.png"" />
            <img class=""book-4"" src=""img/book-4-3@2x.png"" />
            <div class=""rectangle-227""></div>
            <img class=""group-1-45"" src=""img/group-1-45-3@1x.png"" />
            <div class=""group-587 poppins-medium-hunter-green-16px"">
              <div class=""place"">Home</div>
              <div class=""group-586"">
                <div class=""why-uleadz poppins-medium-hunter-green-16px"">Why Uleadz</div>
                <img class=""line-42"" src=""img/line-42-1@2x.svg"" />
              </div>
              <div class=""industries"">Industries</div>
              <div class=""about-us"">About Us</div>
              <div class=""pricing"">Pricing</div>
     ");
                WriteLiteral(@"         <div class=""place-1"">Contact</div>
            </div>
            <img class=""mask-group"" src=""img/mask-group-3@1x.svg"" />
            <div class=""group-561"">
              <div class=""flex-col"">
                <div class=""overlap-group6"">
                  <img class=""ellipse-32"" src=""img/ellipse-32@2x.png"" />
                  <div class=""group-559"">
                    <img class=""ellipse-36"" src=""img/ellipse-36@2x.png"" />
                    <div class=""group-558 poppins-normal-hunter-green-10px"">
                      <div class=""name valign-text-middle"">Lucy Mckinnon</div>
                      <div class=""profession valign-text-middle"">Profession</div>
                    </div>
                  </div>
                </div>
                <img class=""ellipse-34"" src=""img/ellipse-34@2x.png"" />
              </div>
              <div class=""flex-col-1"">
                <img class=""ellipse-33"" src=""img/ellipse-33@2x.png"" />
                <div class=""overlap-group5"">
                  <img c");
                WriteLiteral(@"lass=""ellipse-35"" src=""img/ellipse-35@2x.png"" />
                  <div class=""group-560"">
                    <img class=""ellipse-36"" src=""img/ellipse-36-1@2x.png"" />
                    <div class=""group-558 poppins-normal-hunter-green-10px"">
                      <div class=""name valign-text-middle"">Lucy Mckinnon</div>
                      <div class=""profession valign-text-middle"">Profession</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class=""group-565"">
              <div class=""creat-container"">
                <div class=""create-estimates-bas"">Create estimates based on customers<br />requirements.</div>
                <p class=""the-process-to-creat poppins-normal-hunter-green-16px"">
                  The process to create estimates is simple and easy!
                </p>
              </div>
              <div class=""flex-row"">
                <img class=""group-56"" src=""img/group-562@2x.svg"" />
             ");
                WriteLiteral(@"   <div class=""flex-col-2 poppins-normal-hunter-green-16px"">
                  <p class=""select-services-to-be-added-to-invoice"">Select services to be added to invoice</p>
                  <div class=""choose-inventory-items"">Choose inventory items</div>
                  <p class=""enter-additional-wor"">Enter additional work performed with charges</p>
                  <p class=""choose-estimate-as-the-payment-option"">Choose estimate as the payment option</p>
                  <p class=""email-estimates-and"">Email estimates and quotations directly to the customers</p>
                  <p class=""get-signed-approvals"">Get signed approvals from customer to start the job</p>
                </div>
              </div>
            </div>
            <img class=""book-5"" src=""img/book-5@2x.png"" />
          </div>
          <img class=""image-1"" src=""img/image-1-4@2x.png"" />
          <div class=""estimates-and-invoices-1"">Estimates and<br />Invoices</div>
          <p class=""send-quotations-and"">
            Send quot");
                WriteLiteral(@"ations and invoices in real-time: quickly generate<br />invoices, process credit cards, secure
            payment processing, get<br />paid faster, third party payment gateway integrations.
          </p>
          <div class=""frame-16"">
            <div class=""learn-more valign-text-middle poppins-medium-white-16px"">Learn More</div>
          </div>
        </div>
        <div class=""group-container"">
          <div class=""group-564"">
            <div class=""create-invoices-with"">Create invoices with the click of a button</div>
            <p class=""the-ease-of-making-i poppins-normal-hunter-green-16px"">
              The ease of making invoices directly from the field makes your<br />workflow even more consistent.
            </p>
            <div class=""flex-row-1"">
              <img class=""group-56"" src=""img/group-563@2x.svg"" />
              <div class=""flex-col-3 poppins-normal-hunter-green-16px"">
                <p class=""quickly-create-pdf-f"">Quickly create PDF files with ready-to-use invoice templa");
                WriteLiteral(@"tes</p>
                <p class=""include-before-and-a"">Include before and after work performed pictures</p>
                <div class=""attach-documents"">Attach documents</div>
                <p class=""obtain-digital-signa"">Obtain Digital Signature from Customer on job completion</p>
                <p class=""email-invoices-direc"">Email invoices directly to the customers</p>
                <p class=""attach-prepared-invo"">Attach prepared invoices to a job for future reference</p>
              </div>
            </div>
            <p class=""with-simplified-invo"">
              <span class=""span"">With </span
              ><span class=""span1 poppins-normal-hunter-green-16px"">Simplified Invoicing</span
              ><span class=""span""
                >, Field Service Technicians and back office staff have<br />the power to create invoices in seconds by
                simply adding work performed,<br />or items from price book and trucks parts from inventory to the
                invoice.</span
            ");
                WriteLiteral(@"  >
            </p>
          </div>
          <div class=""overlap-group7"">
            <img class=""ellipse-22"" src=""img/ellipse-22@1x.svg"" />
            <img class=""ellipse-24"" src=""img/ellipse-24@1x.svg"" />
            <img class=""ellipse-23"" src=""img/ellipse-23-1@2x.svg"" />
            <img class=""mansgement-1"" src=""img/mansgement-1-1@1x.png"" />
            <img class=""coins2-3"" src=""img/coins2-2@2x.png"" />
            <img class=""coins2-4"" src=""img/coins2-4-1@2x.png"" />
          </div>
        </div>
        <div class=""overlap-group10"">
          <div class=""frame-17"">
            <div class=""book-demo valign-text-middle poppins-medium-white-16px"">Book Demo</div>
          </div>
          <div class=""choose-from-multiple-payment-options"">Choose from multiple payment options</div>
          <div class=""provide-customers-th poppins-normal-hunter-green-18px"">
            Provide customers the flexibility to choose from more than 5<br />different payment options to facilitate
            quicker payment<");
                WriteLiteral(@"br />processing. The service mobile application lets the field force worker enter<br />all
            the details against customers by letting them carefully<br />choose the payment options and complete the
            invoice instantly.
          </div>
          <img class=""mask-group-1"" src=""img/mask-group-4@1x.svg"" />
          <div class=""overlap-group8"">
            <div class=""ellipse-28""></div>
            <img class=""book-4-1"" src=""img/book-4@2x.png"" />
          </div>
          <div class=""overlap-group9"">
            <div class=""ellipse-27""></div>
            <img class=""book-3"" src=""img/book-3@2x.png"" />
          </div>
        </div>
        <div class=""group-625"">
          <div class=""we-have-defined-a-co valign-text-middle"">
            We have defined a collaborative<br />process with our clients. Let’s see if <br />we are a fit.
          </div>
          <img class=""line-22"" src=""img/line-22@2x.svg"" />
          <div class=""flex-row-2"">
            <img class=""line-23"" src=""img/line-23@2");
                WriteLiteral(@"x.svg"" />
            <div class=""what-is-an-invoice valign-text-middle poppins-medium-hunter-green-24px"">
              What is an invoice?
            </div>
          </div>
          <div class=""in-basic-terms-an-i"">
            In basic terms, an invoice is a bill sent to your<br />customers after you complete a job or visit.
          </div>
          <div class=""group-570"">
            <div class=""group-569"">
              <div class=""line-container"">
                <img class=""line-24"" src=""img/line-23@2x.svg"" />
                <img class=""line-25"" src=""img/line-25@2x.svg"" />
              </div>
              <div class=""when-is-the-best-tim poppins-medium-hunter-green-24px"">
                When is the best time to send an invoice?
              </div>
            </div>
            <div class=""group-568"">
              <div class=""line-container"">
                <img class=""line-24"" src=""img/line-23@2x.svg"" />
                <img class=""line-25"" src=""img/line-25@2x.svg"" />
              </div>
");
                WriteLiteral(@"              <div class=""how-can-i-make-it-ea poppins-medium-hunter-green-24px"">
                How can I make it easier for clients to pay me?
              </div>
            </div>
          </div>
        </div>
        <div class=""group-573"">
          <div class=""group-525"">
            <div class=""packed-with-features"">Packed With Features For Your Home<br />Service Business</div>
            <div class=""frame-17-1"">
              <div class=""overlap-group"">
                <img class=""purse-1"" src=""img/purse-1-1@2x.png"" />
                <div class=""job-profitability poppins-medium-hunter-green-34px"">Job Profitability</div>
                <div class=""estimates-invoices poppins-normal-hunter-green-18px"">
                  Estimates &amp; Invoices<br />Contracts &amp; Signatures<br />Customer Management<br />Email &amp; SMS
                  Communications
                </div>
              </div>
              <div class=""overlap-group1"">
                <img class=""purse-2"" src=""img/purse-2@2x.p");
                WriteLiteral(@"ng"" />
                <div class=""customer-management poppins-medium-hunter-green-34px"">Customer<br />Management</div>
                <div class=""scheduling-dispatc poppins-normal-hunter-green-18px"">
                  Scheduling &amp; Dispatch<br />Route Planning<br />Job Profitability<br />Mobile &amp; Email
                  Payments<br />Square Integration
                </div>
              </div>
              <div class=""overlap-group2"">
                <img class=""purse-3"" src=""img/purse-3@2x.png"" />
                <div class=""online-booking poppins-medium-hunter-green-34px"">Online Booking</div>
                <div class=""file-photo-attachmen poppins-normal-hunter-green-18px"">
                  File/Photo Attachments<br />Online Booking<br />Notifications &amp; Reminders<br />Custom Forms &amp;
                  Fields
                </div>
              </div>
              <div class=""overlap-group3"">
                <img class=""purse-3-1"" src=""img/purse-3-1@2x.png"" />
                <div clas");
                WriteLiteral(@"s=""online-booking-1 poppins-medium-hunter-green-34px"">Online Booking</div>
                <div class=""cloud-storage-i-os-a poppins-normal-hunter-green-18px"">
                  Cloud storage<br />iOS, Android, and web<br />QuickBooks &amp; Xero Sync<br />…and more!
                </div>
              </div>
            </div>
          </div>
          <div class=""overlap-group4""><img class=""line-44"" src=""img/line-44@2x.svg"" /></div>
        </div>
        <div class=""group-518"">
          <div class=""overlap-group4-1 poppins-normal-white-16px"">
            <img class=""rectangle-170"" src=""img/rectangle-170@1x.svg"" />
            <img class=""line-41"" src=""img/line-41-4@1x.svg"" />
            <div class=""group-484"">
              <div class=""stay-ahead-of-the-ga poppins-medium-white-47px"">
                Stay ahead of the game<br />with Uleadz Field Management Software
              </div>
              <div class=""frame-16-1"">
                <div class=""contact-us valign-text-middle poppins-medium-white-16p");
                WriteLiteral(@"x"">Contact Us</div>
              </div>
            </div>
            <div class=""group-486"">
              <div class=""place-2 valign-text-middle"">Home</div>
              <div class=""why-uleadz-1 valign-text-middle"">Why Uleadz?</div>
              <div class=""about-us-1 valign-text-middle"">About Us</div>
              <div class=""place-3 valign-text-middle"">Contact</div>
              <div class=""pricing-1 valign-text-middle"">Pricing</div>
            </div>
            <div class=""group-485 poppins-normal-white-16px"">
              <div class=""industries-1 valign-text-middle"">Industries</div>
              <div class=""terms-of-use valign-text-middle"">Terms of use</div>
              <div class=""privacy-policy valign-text-middle"">Privacy Policy</div>
              <div class=""support valign-text-middle"">Support</div>
            </div>
            <div class=""hellouleadzcom valign-text-middle"">hello@uleadz.com</div>
            <div class=""group-144"">
              <div class=""overlap-group1-1""><img class");
                WriteLiteral(@"=""group-144-1"" src=""img/group-144-1@2x.svg"" /></div>
              <div class=""overlap-group-1""><img class=""group"" src=""img/group-5@2x.svg"" /></div>
              <div class=""overlap-group2-1"">
                <img class=""twitter-logowine-1"" src=""img/twitter-logo-wine-1-4@2x.svg"" />
              </div>
              <div class=""overlap-group3-1"">
                <img
                  class=""you-tube-icon-almost-black-logowine-1""
                  src=""img/youtube-icon-almost-black-logo-wine-1-4@2x.svg""
                />
              </div>
            </div>
            <img class=""uleadz1-1"" src=""img/uleadz1-1@2x.png"" />
          </div>
        </div>
      </div>
    </div>
  ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</html>\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
